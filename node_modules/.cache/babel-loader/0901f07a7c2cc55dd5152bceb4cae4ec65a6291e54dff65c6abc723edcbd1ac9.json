{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./App.css';import axios from'axios';import MarketSummary from'./components/MarketSummary';import VolatilityIndicators from'./components/VolatilityIndicators';import TradingSignals from'./components/TradingSignals';import HARModel from'./components/HARModel';import HistoricalChart from'./components/HistoricalChart';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL='https://backend-morphvm-elaa2g3p.http.cloud.morph.so/api';function App(){const[marketData,setMarketData]=useState(null);const[volatilityData,setVolatilityData]=useState(null);const[signals,setSignals]=useState([]);const[harParams,setHarParams]=useState(null);const[historicalData,setHistoricalData]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[lastUpdate,setLastUpdate]=useState(new Date());const fetchData=async()=>{try{setLoading(true);setError(null);// Fetch all data in parallel\nconst[marketRes,volatilityRes,signalsRes,harRes,historicalRes]=await Promise.all([axios.get(\"\".concat(API_BASE_URL,\"/market/summary\")),axios.get(\"\".concat(API_BASE_URL,\"/volatility/indicators\")),axios.get(\"\".concat(API_BASE_URL,\"/signals/latest\")),axios.get(\"\".concat(API_BASE_URL,\"/models/har/SPY\")),axios.get(\"\".concat(API_BASE_URL,\"/market/historical\"))]);setMarketData(marketRes.data);setVolatilityData(volatilityRes.data);setSignals(signalsRes.data.signals||[]);setHarParams(harRes.data);setHistoricalData(historicalRes.data.data||[]);setLastUpdate(new Date());setLoading(false);}catch(err){console.error('Error fetching data:',err);setError(err.message||'Failed to fetch data');setLoading(false);}};useEffect(()=>{fetchData();// Refresh data every 30 seconds\nconst interval=setInterval(fetchData,30000);return()=>clearInterval(interval);},[]);const handleRefresh=()=>{fetchData();};if(loading&&!marketData){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-900 text-white flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-blue-500 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl\",children:\"Loading S&P 500 market data...\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 mt-2\",children:\"Fetching real-time data from Alpha Vantage API\"})]})});}if(error&&!marketData){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-900 text-white flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-xl text-red-500 mb-4\",children:[\"Error loading data: \",error]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRefresh,className:\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",children:\"Retry\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-white\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"bg-gray-800 shadow-lg\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-white\",children:\"S&P 500 Volatility Tracker\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 mt-1\",children:\"Real-time market data with HAR modeling and volatility analysis\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-400\",children:[\"Last update: \",lastUpdate.toLocaleTimeString()]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRefresh,disabled:loading,className:\"\".concat(loading?'bg-gray-600 cursor-not-allowed':'bg-blue-600 hover:bg-blue-700',\" text-white font-bold py-2 px-4 rounded transition-colors\"),children:loading?'Refreshing...':'Refresh'})]})]})})}),/*#__PURE__*/_jsxs(\"main\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-2\",children:/*#__PURE__*/_jsx(MarketSummary,{data:marketData})}),/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-2\",children:/*#__PURE__*/_jsx(HistoricalChart,{data:historicalData})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(VolatilityIndicators,{data:volatilityData})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(HARModel,{params:harParams})}),/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-2\",children:/*#__PURE__*/_jsx(TradingSignals,{signals:signals})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-8 p-4 bg-gray-800 rounded-lg\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-400 text-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-green-400\",children:\"\\u25CF LIVE DATA\"}),\" - Powered by Alpha Vantage API | Database: PostgreSQL (Neon) | Updates every 30 seconds during market hours\"]})})]})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","axios","MarketSummary","VolatilityIndicators","TradingSignals","HARModel","HistoricalChart","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","App","marketData","setMarketData","volatilityData","setVolatilityData","signals","setSignals","harParams","setHarParams","historicalData","setHistoricalData","loading","setLoading","error","setError","lastUpdate","setLastUpdate","Date","fetchData","marketRes","volatilityRes","signalsRes","harRes","historicalRes","Promise","all","get","concat","data","err","console","message","interval","setInterval","clearInterval","handleRefresh","className","children","onClick","toLocaleTimeString","disabled","params"],"sources":["/root/sp500-frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport MarketSummary from './components/MarketSummary';\nimport VolatilityIndicators from './components/VolatilityIndicators';\nimport TradingSignals from './components/TradingSignals';\nimport HARModel from './components/HARModel';\nimport HistoricalChart from './components/HistoricalChart';\nimport { MarketData, VolatilityData, Signal, HARParams } from './types';\n\nconst API_BASE_URL = 'https://backend-morphvm-elaa2g3p.http.cloud.morph.so/api';\n\nfunction App() {\n  const [marketData, setMarketData] = useState<MarketData | null>(null);\n  const [volatilityData, setVolatilityData] = useState<VolatilityData | null>(null);\n  const [signals, setSignals] = useState<Signal[]>([]);\n  const [harParams, setHarParams] = useState<HARParams | null>(null);\n  const [historicalData, setHistoricalData] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [lastUpdate, setLastUpdate] = useState<Date>(new Date());\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Fetch all data in parallel\n      const [marketRes, volatilityRes, signalsRes, harRes, historicalRes] = await Promise.all([\n        axios.get(`${API_BASE_URL}/market/summary`),\n        axios.get(`${API_BASE_URL}/volatility/indicators`),\n        axios.get(`${API_BASE_URL}/signals/latest`),\n        axios.get(`${API_BASE_URL}/models/har/SPY`),\n        axios.get(`${API_BASE_URL}/market/historical`)\n      ]);\n\n      setMarketData(marketRes.data);\n      setVolatilityData(volatilityRes.data);\n      setSignals(signalsRes.data.signals || []);\n      setHarParams(harRes.data);\n      setHistoricalData(historicalRes.data.data || []);\n      setLastUpdate(new Date());\n      setLoading(false);\n    } catch (err: any) {\n      console.error('Error fetching data:', err);\n      setError(err.message || 'Failed to fetch data');\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    \n    // Refresh data every 30 seconds\n    const interval = setInterval(fetchData, 30000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  const handleRefresh = () => {\n    fetchData();\n  };\n\n  if (loading && !marketData) {\n    return (\n      <div className=\"min-h-screen bg-gray-900 text-white flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-blue-500 mx-auto mb-4\"></div>\n          <p className=\"text-xl\">Loading S&P 500 market data...</p>\n          <p className=\"text-sm text-gray-400 mt-2\">Fetching real-time data from Alpha Vantage API</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error && !marketData) {\n    return (\n      <div className=\"min-h-screen bg-gray-900 text-white flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-xl text-red-500 mb-4\">Error loading data: {error}</p>\n          <button \n            onClick={handleRefresh}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white\">\n      <header className=\"bg-gray-800 shadow-lg\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-white\">S&P 500 Volatility Tracker</h1>\n              <p className=\"text-sm text-gray-400 mt-1\">Real-time market data with HAR modeling and volatility analysis</p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"text-sm text-gray-400\">\n                Last update: {lastUpdate.toLocaleTimeString()}\n              </div>\n              <button \n                onClick={handleRefresh}\n                disabled={loading}\n                className={`${\n                  loading \n                    ? 'bg-gray-600 cursor-not-allowed' \n                    : 'bg-blue-600 hover:bg-blue-700'\n                } text-white font-bold py-2 px-4 rounded transition-colors`}\n              >\n                {loading ? 'Refreshing...' : 'Refresh'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Market Summary */}\n          <div className=\"lg:col-span-2\">\n            <MarketSummary data={marketData} />\n          </div>\n\n          {/* Historical Chart */}\n          <div className=\"lg:col-span-2\">\n            <HistoricalChart data={historicalData} />\n          </div>\n\n          {/* Volatility Indicators */}\n          <div>\n            <VolatilityIndicators data={volatilityData} />\n          </div>\n\n          {/* HAR Model */}\n          <div>\n            <HARModel params={harParams} />\n          </div>\n\n          {/* Trading Signals */}\n          <div className=\"lg:col-span-2\">\n            <TradingSignals signals={signals} />\n          </div>\n        </div>\n\n        {/* Data Source Notice */}\n        <div className=\"mt-8 p-4 bg-gray-800 rounded-lg\">\n          <p className=\"text-sm text-gray-400 text-center\">\n            <span className=\"text-green-400\">● LIVE DATA</span> - Powered by Alpha Vantage API | \n            Database: PostgreSQL (Neon) | Updates every 30 seconds during market hours\n          </p>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}