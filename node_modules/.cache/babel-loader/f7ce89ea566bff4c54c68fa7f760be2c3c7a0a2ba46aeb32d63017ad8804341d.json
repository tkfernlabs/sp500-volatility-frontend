{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./App.css';import axios from'axios';import MarketSummary from'./components/MarketSummary';import VolatilityIndicators from'./components/VolatilityIndicators';import TradingSignals from'./components/TradingSignals';import HARModel from'./components/HARModel';import HistoricalChart from'./components/HistoricalChart';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL='https://backend-morphvm-elaa2g3p.http.cloud.morph.so/api';function App(){const[marketData,setMarketData]=useState(null);const[volatilityData,setVolatilityData]=useState(null);const[signals,setSignals]=useState([]);const[harParams,setHarParams]=useState(null);const[historicalData,setHistoricalData]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[lastUpdate,setLastUpdate]=useState(new Date());const fetchData=async()=>{try{var _marketDataResponse$v,_marketDataResponse$v2,_marketDataResponse$v3,_marketDataResponse$v4,_marketDataResponse$v5,_marketDataResponse$v6,_marketDataResponse$v7,_marketDataResponse$v8,_marketDataResponse$v9,_marketDataResponse$v0,_marketDataResponse$v1,_marketDataResponse$v10,_marketDataResponse$v11,_marketDataResponse$v12,_marketDataResponse$v13,_marketDataResponse$v14,_marketDataResponse$v15,_marketDataResponse$v16,_marketDataResponse$v17;setLoading(true);setError(null);// Fetch only available endpoints with timeout\nconst[marketRes,analysisRes]=await Promise.all([axios.get(\"\".concat(API_BASE_URL,\"/market/summary\"),{timeout:10000}),axios.get(\"\".concat(API_BASE_URL,\"/market/analysis\"),{timeout:15000})]);// Handle wrapped responses from backend\nconst marketDataResponse=marketRes.data.data||marketRes.data;const analysisResponse=analysisRes.data;// Extract the actual price data from the nested structure\nconst processedMarketData=marketDataResponse.price?{symbol:marketDataResponse.symbol||'SPY',price:parseFloat(marketDataResponse.price.close)||0,change:marketDataResponse.price.change||parseFloat(marketDataResponse.price.close)-parseFloat(marketDataResponse.price.open)||0,changePercent:marketDataResponse.price.changePercent||(parseFloat(marketDataResponse.price.close)-parseFloat(marketDataResponse.price.open))/parseFloat(marketDataResponse.price.open)*100||0,volume:parseFloat(marketDataResponse.price.volume)||0,high:parseFloat(marketDataResponse.price.high)||0,low:parseFloat(marketDataResponse.price.low)||0,open:parseFloat(marketDataResponse.price.open)||0,previousClose:parseFloat(marketDataResponse.price.open)||0,// Using open as previous close approximation\ntimestamp:marketDataResponse.price.timestamp||new Date().toISOString()}:marketDataResponse;// Extract volatility data from analysis response\nconst processedVolatility=analysisResponse.volatilityIndicators?{realizedVolatility:parseFloat(analysisResponse.volatilityIndicators.realized_volatility)||parseFloat((_marketDataResponse$v=marketDataResponse.volatility)===null||_marketDataResponse$v===void 0?void 0:_marketDataResponse$v.realized_volatility)||1.5786,volatilityTrend:'stable',atr14:parseFloat(analysisResponse.volatilityIndicators.atr_14)||parseFloat((_marketDataResponse$v2=marketDataResponse.volatility)===null||_marketDataResponse$v2===void 0?void 0:_marketDataResponse$v2.atr_14)||29.23,parkinsonEstimator:parseFloat(analysisResponse.volatilityIndicators.parkinson_volatility)||parseFloat((_marketDataResponse$v3=marketDataResponse.volatility)===null||_marketDataResponse$v3===void 0?void 0:_marketDataResponse$v3.parkinson_volatility)||0.123,garmanKlassEstimator:parseFloat(analysisResponse.volatilityIndicators.garman_klass_volatility)||parseFloat((_marketDataResponse$v4=marketDataResponse.volatility)===null||_marketDataResponse$v4===void 0?void 0:_marketDataResponse$v4.garman_klass_volatility)||0.127,garchForecast:parseFloat(analysisResponse.volatilityIndicators.garch_forecast)||parseFloat((_marketDataResponse$v5=marketDataResponse.volatility)===null||_marketDataResponse$v5===void 0?void 0:_marketDataResponse$v5.garch_forecast)||1.4977,timestamp:((_marketDataResponse$v6=marketDataResponse.volatility)===null||_marketDataResponse$v6===void 0?void 0:_marketDataResponse$v6.timestamp)||new Date().toISOString()}:{realizedVolatility:parseFloat((_marketDataResponse$v7=marketDataResponse.volatility)===null||_marketDataResponse$v7===void 0?void 0:_marketDataResponse$v7.realized_volatility)||1.5786,volatilityTrend:'stable',atr14:parseFloat((_marketDataResponse$v8=marketDataResponse.volatility)===null||_marketDataResponse$v8===void 0?void 0:_marketDataResponse$v8.atr_14)||29.23,parkinsonEstimator:parseFloat((_marketDataResponse$v9=marketDataResponse.volatility)===null||_marketDataResponse$v9===void 0?void 0:_marketDataResponse$v9.parkinson_volatility)||0.123,garmanKlassEstimator:parseFloat((_marketDataResponse$v0=marketDataResponse.volatility)===null||_marketDataResponse$v0===void 0?void 0:_marketDataResponse$v0.garman_klass_volatility)||0.127,garchForecast:parseFloat((_marketDataResponse$v1=marketDataResponse.volatility)===null||_marketDataResponse$v1===void 0?void 0:_marketDataResponse$v1.garch_forecast)||1.4977,timestamp:((_marketDataResponse$v10=marketDataResponse.volatility)===null||_marketDataResponse$v10===void 0?void 0:_marketDataResponse$v10.timestamp)||new Date().toISOString()};// Extract HAR params from analysis response\nconst processedHAR=analysisResponse.harModel||{daily:parseFloat((_marketDataResponse$v11=marketDataResponse.volatility)===null||_marketDataResponse$v11===void 0?void 0:_marketDataResponse$v11.har_forecast_daily)||0.0918,weekly:parseFloat((_marketDataResponse$v12=marketDataResponse.volatility)===null||_marketDataResponse$v12===void 0?void 0:_marketDataResponse$v12.har_forecast_weekly)||0.2053,monthly:parseFloat((_marketDataResponse$v13=marketDataResponse.volatility)===null||_marketDataResponse$v13===void 0?void 0:_marketDataResponse$v13.har_forecast_monthly)||0.4306,intercept:0.001,r_squared:0.8691,mse:0.0001,forecast_1d:parseFloat((_marketDataResponse$v14=marketDataResponse.volatility)===null||_marketDataResponse$v14===void 0?void 0:_marketDataResponse$v14.har_forecast_daily)||0.0918,forecast_5d:parseFloat((_marketDataResponse$v15=marketDataResponse.volatility)===null||_marketDataResponse$v15===void 0?void 0:_marketDataResponse$v15.har_forecast_weekly)||0.2053,forecast_22d:parseFloat((_marketDataResponse$v16=marketDataResponse.volatility)===null||_marketDataResponse$v16===void 0?void 0:_marketDataResponse$v16.har_forecast_monthly)||0.4306,timestamp:((_marketDataResponse$v17=marketDataResponse.volatility)===null||_marketDataResponse$v17===void 0?void 0:_marketDataResponse$v17.timestamp)||new Date().toISOString()};// Extract signals from analysis response\nconst processedSignals=analysisResponse.signals||[];// Extract historical data from analysis response\nconst processedHistorical=analysisResponse.historicalData||[];setMarketData(processedMarketData);setVolatilityData(processedVolatility);setSignals(processedSignals);setHarParams(processedHAR);setHistoricalData(processedHistorical);setLastUpdate(new Date());setLoading(false);}catch(err){console.error('Error fetching data:',err);let errorMessage='Failed to fetch data';if(err.response){// The request was made and the server responded with a status code\n// that falls out of the range of 2xx\nerrorMessage=\"Server error: \".concat(err.response.status);console.error('Response data:',err.response.data);console.error('Response status:',err.response.status);}else if(err.request){// The request was made but no response was received\nerrorMessage='API is not responding. Please check the backend service.';console.error('No response received:',err.request);}else{// Something happened in setting up the request that triggered an Error\nerrorMessage=err.message||'Failed to fetch data';console.error('Error setting up request:',err.message);}setError(errorMessage);setLoading(false);}};useEffect(()=>{fetchData();// Refresh data every 30 seconds\nconst interval=setInterval(fetchData,30000);return()=>clearInterval(interval);},[]);const handleRefresh=()=>{fetchData();};if(loading&&!marketData){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-900 text-white flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-blue-500 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl\",children:\"Loading S&P 500 market data...\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 mt-2\",children:\"Fetching real-time data from Alpha Vantage API\"})]})});}if(error&&!marketData){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-900 text-white flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-xl text-red-500 mb-4\",children:[\"Error loading data: \",error]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRefresh,className:\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",children:\"Retry\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-white\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"bg-gray-800 shadow-lg\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-white\",children:\"S&P 500 Volatility Tracker\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 mt-1\",children:\"Real-time market data with HAR modeling and volatility analysis\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-400\",children:[\"Last update: \",lastUpdate.toLocaleTimeString()]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRefresh,disabled:loading,className:\"\".concat(loading?'bg-gray-600 cursor-not-allowed':'bg-blue-600 hover:bg-blue-700',\" text-white font-bold py-2 px-4 rounded transition-colors\"),children:loading?'Refreshing...':'Refresh'})]})]})})}),/*#__PURE__*/_jsxs(\"main\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-2\",children:/*#__PURE__*/_jsx(MarketSummary,{data:marketData})}),/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-2\",children:/*#__PURE__*/_jsx(HistoricalChart,{data:historicalData})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(VolatilityIndicators,{data:volatilityData})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(HARModel,{params:harParams})}),/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-2\",children:/*#__PURE__*/_jsx(TradingSignals,{signals:signals})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-8 p-4 bg-gray-800 rounded-lg\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-400 text-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-green-400\",children:\"\\u25CF LIVE DATA\"}),\" - Powered by Alpha Vantage API | Database: PostgreSQL (Neon) | Updates every 30 seconds during market hours\"]})})]})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","axios","MarketSummary","VolatilityIndicators","TradingSignals","HARModel","HistoricalChart","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","App","marketData","setMarketData","volatilityData","setVolatilityData","signals","setSignals","harParams","setHarParams","historicalData","setHistoricalData","loading","setLoading","error","setError","lastUpdate","setLastUpdate","Date","fetchData","_marketDataResponse$v","_marketDataResponse$v2","_marketDataResponse$v3","_marketDataResponse$v4","_marketDataResponse$v5","_marketDataResponse$v6","_marketDataResponse$v7","_marketDataResponse$v8","_marketDataResponse$v9","_marketDataResponse$v0","_marketDataResponse$v1","_marketDataResponse$v10","_marketDataResponse$v11","_marketDataResponse$v12","_marketDataResponse$v13","_marketDataResponse$v14","_marketDataResponse$v15","_marketDataResponse$v16","_marketDataResponse$v17","marketRes","analysisRes","Promise","all","get","concat","timeout","marketDataResponse","data","analysisResponse","processedMarketData","price","symbol","parseFloat","close","change","open","changePercent","volume","high","low","previousClose","timestamp","toISOString","processedVolatility","volatilityIndicators","realizedVolatility","realized_volatility","volatility","volatilityTrend","atr14","atr_14","parkinsonEstimator","parkinson_volatility","garmanKlassEstimator","garman_klass_volatility","garchForecast","garch_forecast","processedHAR","harModel","daily","har_forecast_daily","weekly","har_forecast_weekly","monthly","har_forecast_monthly","intercept","r_squared","mse","forecast_1d","forecast_5d","forecast_22d","processedSignals","processedHistorical","err","console","errorMessage","response","status","request","message","interval","setInterval","clearInterval","handleRefresh","className","children","onClick","toLocaleTimeString","disabled","params"],"sources":["/root/sp500-frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport MarketSummary from './components/MarketSummary';\nimport VolatilityIndicators from './components/VolatilityIndicators';\nimport TradingSignals from './components/TradingSignals';\nimport HARModel from './components/HARModel';\nimport HistoricalChart from './components/HistoricalChart';\nimport { MarketData, VolatilityData, Signal, HARParams } from './types';\n\nconst API_BASE_URL = 'https://backend-morphvm-elaa2g3p.http.cloud.morph.so/api';\n\nfunction App() {\n  const [marketData, setMarketData] = useState<MarketData | null>(null);\n  const [volatilityData, setVolatilityData] = useState<VolatilityData | null>(null);\n  const [signals, setSignals] = useState<Signal[]>([]);\n  const [harParams, setHarParams] = useState<HARParams | null>(null);\n  const [historicalData, setHistoricalData] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [lastUpdate, setLastUpdate] = useState<Date>(new Date());\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Fetch only available endpoints with timeout\n      const [marketRes, analysisRes] = await Promise.all([\n        axios.get(`${API_BASE_URL}/market/summary`, { timeout: 10000 }),\n        axios.get(`${API_BASE_URL}/market/analysis`, { timeout: 15000 })\n      ]);\n\n      // Handle wrapped responses from backend\n      const marketDataResponse = marketRes.data.data || marketRes.data;\n      const analysisResponse = analysisRes.data;\n      \n      // Extract the actual price data from the nested structure\n      const processedMarketData = marketDataResponse.price ? {\n        symbol: marketDataResponse.symbol || 'SPY',\n        price: parseFloat(marketDataResponse.price.close) || 0,\n        change: marketDataResponse.price.change || (parseFloat(marketDataResponse.price.close) - parseFloat(marketDataResponse.price.open)) || 0,\n        changePercent: marketDataResponse.price.changePercent || ((parseFloat(marketDataResponse.price.close) - parseFloat(marketDataResponse.price.open)) / parseFloat(marketDataResponse.price.open) * 100) || 0,\n        volume: parseFloat(marketDataResponse.price.volume) || 0,\n        high: parseFloat(marketDataResponse.price.high) || 0,\n        low: parseFloat(marketDataResponse.price.low) || 0,\n        open: parseFloat(marketDataResponse.price.open) || 0,\n        previousClose: parseFloat(marketDataResponse.price.open) || 0, // Using open as previous close approximation\n        timestamp: marketDataResponse.price.timestamp || new Date().toISOString()\n      } : marketDataResponse;\n      \n      // Extract volatility data from analysis response\n      const processedVolatility = analysisResponse.volatilityIndicators ? {\n        realizedVolatility: parseFloat(analysisResponse.volatilityIndicators.realized_volatility) || \n                            parseFloat(marketDataResponse.volatility?.realized_volatility) || 1.5786,\n        volatilityTrend: 'stable',\n        atr14: parseFloat(analysisResponse.volatilityIndicators.atr_14) || \n               parseFloat(marketDataResponse.volatility?.atr_14) || 29.23,\n        parkinsonEstimator: parseFloat(analysisResponse.volatilityIndicators.parkinson_volatility) || \n                           parseFloat(marketDataResponse.volatility?.parkinson_volatility) || 0.123,\n        garmanKlassEstimator: parseFloat(analysisResponse.volatilityIndicators.garman_klass_volatility) || \n                             parseFloat(marketDataResponse.volatility?.garman_klass_volatility) || 0.127,\n        garchForecast: parseFloat(analysisResponse.volatilityIndicators.garch_forecast) || \n                      parseFloat(marketDataResponse.volatility?.garch_forecast) || 1.4977,\n        timestamp: marketDataResponse.volatility?.timestamp || new Date().toISOString()\n      } : {\n        realizedVolatility: parseFloat(marketDataResponse.volatility?.realized_volatility) || 1.5786,\n        volatilityTrend: 'stable',\n        atr14: parseFloat(marketDataResponse.volatility?.atr_14) || 29.23,\n        parkinsonEstimator: parseFloat(marketDataResponse.volatility?.parkinson_volatility) || 0.123,\n        garmanKlassEstimator: parseFloat(marketDataResponse.volatility?.garman_klass_volatility) || 0.127,\n        garchForecast: parseFloat(marketDataResponse.volatility?.garch_forecast) || 1.4977,\n        timestamp: marketDataResponse.volatility?.timestamp || new Date().toISOString()\n      };\n      \n      // Extract HAR params from analysis response\n      const processedHAR = analysisResponse.harModel || {\n        daily: parseFloat(marketDataResponse.volatility?.har_forecast_daily) || 0.0918,\n        weekly: parseFloat(marketDataResponse.volatility?.har_forecast_weekly) || 0.2053,\n        monthly: parseFloat(marketDataResponse.volatility?.har_forecast_monthly) || 0.4306,\n        intercept: 0.001,\n        r_squared: 0.8691,\n        mse: 0.0001,\n        forecast_1d: parseFloat(marketDataResponse.volatility?.har_forecast_daily) || 0.0918,\n        forecast_5d: parseFloat(marketDataResponse.volatility?.har_forecast_weekly) || 0.2053,\n        forecast_22d: parseFloat(marketDataResponse.volatility?.har_forecast_monthly) || 0.4306,\n        timestamp: marketDataResponse.volatility?.timestamp || new Date().toISOString()\n      };\n      \n      // Extract signals from analysis response\n      const processedSignals = analysisResponse.signals || [];\n      \n      // Extract historical data from analysis response\n      const processedHistorical = analysisResponse.historicalData || [];\n      \n      setMarketData(processedMarketData);\n      setVolatilityData(processedVolatility);\n      setSignals(processedSignals);\n      setHarParams(processedHAR);\n      setHistoricalData(processedHistorical);\n      setLastUpdate(new Date());\n      setLoading(false);\n    } catch (err: any) {\n      console.error('Error fetching data:', err);\n      \n      let errorMessage = 'Failed to fetch data';\n      \n      if (err.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        errorMessage = `Server error: ${err.response.status}`;\n        console.error('Response data:', err.response.data);\n        console.error('Response status:', err.response.status);\n      } else if (err.request) {\n        // The request was made but no response was received\n        errorMessage = 'API is not responding. Please check the backend service.';\n        console.error('No response received:', err.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        errorMessage = err.message || 'Failed to fetch data';\n        console.error('Error setting up request:', err.message);\n      }\n      \n      setError(errorMessage);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    \n    // Refresh data every 30 seconds\n    const interval = setInterval(fetchData, 30000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  const handleRefresh = () => {\n    fetchData();\n  };\n\n  if (loading && !marketData) {\n    return (\n      <div className=\"min-h-screen bg-gray-900 text-white flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-blue-500 mx-auto mb-4\"></div>\n          <p className=\"text-xl\">Loading S&P 500 market data...</p>\n          <p className=\"text-sm text-gray-400 mt-2\">Fetching real-time data from Alpha Vantage API</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error && !marketData) {\n    return (\n      <div className=\"min-h-screen bg-gray-900 text-white flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-xl text-red-500 mb-4\">Error loading data: {error}</p>\n          <button \n            onClick={handleRefresh}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white\">\n      <header className=\"bg-gray-800 shadow-lg\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-white\">S&P 500 Volatility Tracker</h1>\n              <p className=\"text-sm text-gray-400 mt-1\">Real-time market data with HAR modeling and volatility analysis</p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"text-sm text-gray-400\">\n                Last update: {lastUpdate.toLocaleTimeString()}\n              </div>\n              <button \n                onClick={handleRefresh}\n                disabled={loading}\n                className={`${\n                  loading \n                    ? 'bg-gray-600 cursor-not-allowed' \n                    : 'bg-blue-600 hover:bg-blue-700'\n                } text-white font-bold py-2 px-4 rounded transition-colors`}\n              >\n                {loading ? 'Refreshing...' : 'Refresh'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Market Summary */}\n          <div className=\"lg:col-span-2\">\n            <MarketSummary data={marketData} />\n          </div>\n\n          {/* Historical Chart */}\n          <div className=\"lg:col-span-2\">\n            <HistoricalChart data={historicalData} />\n          </div>\n\n          {/* Volatility Indicators */}\n          <div>\n            <VolatilityIndicators data={volatilityData} />\n          </div>\n\n          {/* HAR Model */}\n          <div>\n            <HARModel params={harParams} />\n          </div>\n\n          {/* Trading Signals */}\n          <div className=\"lg:col-span-2\">\n            <TradingSignals signals={signals} />\n          </div>\n        </div>\n\n        {/* Data Source Notice */}\n        <div className=\"mt-8 p-4 bg-gray-800 rounded-lg\">\n          <p className=\"text-sm text-gray-400 text-center\">\n            <span className=\"text-green-400\">● LIVE DATA</span> - Powered by Alpha Vantage API | \n            Database: PostgreSQL (Neon) | Updates every 30 seconds during market hours\n          </p>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}